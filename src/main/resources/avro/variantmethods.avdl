@namespace("org.ga4gh")
protocol GAVariantMethods {

import idl "variants.avdl";

/******************  /variants/search  *********************/
/** This request maps to the body of POST /variants/search. */
record SearchVariantsRequest {
  /** Required. The IDs of the variant sets to search over. */
  array<string> variantSetIds;

  /** Only return variants which have exactly this name. */
  union { null, string } variantName = null;

  /** 
    Only return variant calls which belong to call sets with these ids.
    Leaving this blank returns all variant calls.
  */
  array<string> callSetIds = [];

  /** Required. Only return variants on this reference sequence. */
  string referenceSequenceName;

  /** 
    Required. The beginning of the window (0-based, inclusive) for which overlapping
    variants should be returned.
  */
  long startPosition;

  /**
    Required. The end of the window (0-based, exclusive) for which overlapping
    variants should be returned.
  */
  long endPosition;

  /** 
    The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;

  /** The maximum number of variants to return. */
  union { null, long } maxResults = 10;
}

/** This is the response from POST /variants/search. */
record SearchVariantsResponse {
  /**
    The list of matching Variants.
    If the `callSetId` field on the returned calls is not present, 
    the ordering of the call sets from a `SearchCallSetsRequest`
    over the parent `GAVariantSet` is guaranteed to match the ordering 
    of the calls on each `GAVariant`. The number of results will also be the same.
  */
  array<GAVariant> variants = [];

  /** 
    The continuation token, which is used to page through large result sets.
    Provide this value in a subsequent request to return the next page of
    results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
  Gets a list of `GAVariants` matching the search criteria.
  
  POST /variants/search takes a `SearchVariantsRequest` as its body and 
  returns a `SearchVariantsResponse`. 
*/
SearchVariantsResponse searchVariants(SearchVariantsRequest request) throws GAException;


/******************  /callsets/search  *********************/
/** This request maps to the body of POST /callsets/search. */
record SearchCallSetsRequest {
  /** 
    If specified, will restrict the query to call sets within the
    given variant sets.
  */
  array<string> variantSetIds = [];

  /** Only return call sets for which a substring of the name matches this string. */
  union { null, string } name = null;

  /** 
    The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from POST /callsets/search. */
record SearchCallSetsResponse {
  /** The list of matching call ets. */
  array<GACallSets> callSets = [];

  /** 
    The continuation token, which is used to page through large result sets.
    Provide this value in a subsequent request to return the next page of
    results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
  Gets a list of `GACallSets` matching the search criteria.
  
  POST /callsets/search takes a `SearchCallSetsRequest` as its body and 
  returns a `SearchCallSetsResponse`. 
*/
SearchCallSetsResponse searchCallSets(SearchCallSetsRequest request) throws GAException;

}
