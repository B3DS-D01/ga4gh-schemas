@namespace("org.ga4gh.methods")
protocol VariantMethods {

import idl "methods.avdl";
import idl "variants.avdl";

/******************  /variantsets/search  *********************/
/** This request maps to the body of `POST /variantsets/search` as JSON. */
record SearchVariantSetsRequest {
  /**
  The Dataset to search.
  */
  string datasetId;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /variantsets/search` expressed as JSON. */
record SearchVariantSetsResponse {
  /** The list of matching variant sets. */
  array<org.ga4gh.models.VariantSet> variantSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariantSet` matching the search criteria.

`POST /variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`.
*/
SearchVariantSetsResponse searchVariantSets(
  /** This request maps to the body of `POST /variantsets/search` as JSON. */
  SearchVariantSetsRequest request) throws GAException;

/**************** /variantsets/{id} *******************/
/**
Gets a `VariantSet` by ID.
`GET /variantsets/{id}` will return a JSON version of `VariantSet`.
*/
org.ga4gh.models.VariantSet getVariantSet(
  /**
  The ID of the `VariantSet`.
  */
  string id) throws GAException;

/******************  /alleles/search  *********************/
/** This request maps to the body of `POST /alleles/search` as JSON. */
record SearchAllelesRequest {
  /**
  The VariantSet to search.
  */
  string variantSetId;

  /**
  Required. Only return `Allele`s on the sequence with this ID.
   */
  string sequenceId;

  /**
  Required. The beginning of the window (0-based, inclusive) for
  which overlapping alleles should be returned.
  Genomic positions are non-negative integers less than segment length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0).
  */
  long start;

  /**
  Required. The end of the window (0-based, exclusive) for which overlapping
  alleles should be returned.
  */
  long end;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /alleles/search` expressed as JSON. */
record SearchAllelesResponse {
  /**
  The list of matching alleles. An `Allele` should be returned if a `Segment`
  in its `Path` overlaps with the specified range.
  */
  array<org.ga4gh.models.Allele> alleles = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Allele`s matching the search criteria.

`POST /alleles/search` must accept a JSON version of `SearchAllelesRequest` as
the post body and will return a JSON version of `SearchAllelesResponse`.
*/
SearchAllelesResponse searchAlleles(
    /**
    This request maps to the body of `POST /alleles/search` as JSON.
    */
    SearchAllelesRequest request) throws GAException;

/**************** /alleles/{id} *******************/
/**
Gets an `Allele` by ID.
`GET /alleles/{id}` will return a JSON version of `Allele`.
*/
org.ga4gh.models.Allele getAllele(
  /**
  The ID of the `Allele`.
  */
  string id) throws GAException;
  
/******************  /alleles/orthogonal/search  *********************/
record SearchOrthogonalAllelePairsRequest {
    org.ga4gh.models.Region region; // TODO: Probably better to use this than a parseable string?
    array<string> sample_ids;
    union { null, array<array<string>> } allele_pairs = null; // The user can ask for particular pairs
    
    float min_MAF = 0.0; // only return variants with MAF among requested samples >= this value
	float max_MAF = 1.0;

}

record SearchOrthogonalAllelePairsResponse {
	array<org.ga4gh.models.OrthogonalAllelePair> pairs = [];

	// FIXME: no paging - why can't we return a stream? Sensitive to network errors?
}

SearchOrthogonalAllelePairsResponse searchOrthogonalAllelePairs(
    SearchOrthogonalAllelePairsRequest request) throws GAException;

/******************  /callsets/search  *********************/
/** This request maps to the body of `POST /callsets/search` as JSON. */
record SearchCallSetsRequest {
  /**
  The VariantSet to search.
  */
  string variantSetId;

  /**
  Only return call sets with this name (case-sensitive, exact match).
  */
  union { null, string } name = null;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /callsets/search` expressed as JSON. */
record SearchCallSetsResponse {
  /** The list of matching call sets. */
  array<org.ga4gh.models.CallSet> callSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `CallSet` matching the search criteria.

`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`
as the post body and will return a JSON version of `SearchCallSetsResponse`.
*/
SearchCallSetsResponse searchCallSets(
  /** This request maps to the body of `POST /callsets/search` as JSON. */
  SearchCallSetsRequest request) throws GAException;

/****************  /callsets/{id}  *******************/
/**
Gets a `CallSet` by ID.
`GET /callsets/{id}` will return a JSON version of `CallSet`.
*/
org.ga4gh.models.CallSet getCallSet(
  /**
  The ID of the `CallSet`.
  */
  string id) throws GAException;
}
