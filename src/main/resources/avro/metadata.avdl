@namespace("org.ga4gh.models")

/**
This protocol defines metadata objects and attributes for use in the other
GA4GH protocols. This includes metadata for individuals, samples, analyses
and instrumentation as well as ontology representations for metadata.
*/

protocol Metadata {

  import idl "common.avdl";

  /**
  An ontology term describing an attribute. (e.g. the phenotype attribute
  'polydactyly' from HPO)
  */
  record OntologyTerm {
    /**
    Ontology source identifier - the identifier, a CURIE (preferred) or
    PURL for an ontology source e.g. http://purl.obolibrary.org/obo/hp.obo
    It differs from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`
    in that it is a URI pointing to an information resource outside of the scope
    of the schema or its resource implementation.
    */
    string id;

    /**
    Ontology term - the representation the id is pointing to.
    */
    union { null, string } term = null;

    /**
    Ontology source name - the name of ontology from which the term is obtained
    e.g. 'Human Phenotype Ontology'
    */
    union { null, string } sourceName = null;

    /**
    Ontology source version - the version of the ontology from which the
    OntologyTerm is obtained; e.g. 2.6.1.
    There is no standard for ontology versioning and some frequently
    released ontologies may use a datestamp, or build number.
    */
    union { null, string } sourceVersion = null;
  }

  /**
  Representation of a disease. The object should in minimal version report the
  kind of the disease and a temporal parameter.

  The "Disease" object is not intended to represent extended clinical records,
  but as a basic representation of the most relevant attributes in the context
  of the study at hand.

  GA4GH metadata does not attempt to encode detailed phenotypes of the disease
  or longitudinal concepts. Association of diseases and disease phenotypes
  (e.g Li-Fraumeni syndrome and resulting malignancies) is complex and left to
  external processes utilizing GA4GH type records in combination with medical
  information systems.

  TODO:
    - need to link to clinical data. Reference to clinical working group
    - need keyword/value table, also human notes
  */
  record Disease {

    /**
    The diagnosis, defined through an OntologyTerm.
    */
    OntologyTerm disease;

    /**
    The stage of the disease at diagnosis. This is not updated to reflect
    progression of the disease, which is recorded in the clinical data.
    e.g. OntologyTerm representation for stage T2N1M0.
    */
    union { null, OntologyTerm } stageAtDiagnosis = null;

    /**
    Age of onset of the disease in ISO 8601 duration PnYnMnDTnHnMnS
    in a suitable approximation
    Example: P47Y08M (47 years, 8 months)
    */
    union { null, string } ageOfOnset = null;

    /**
    Date the diagnosis was made/assigned. This is NOT when the record was
    created.
    Format: ISO 8601 (cf. documentation on time formats)
    */
    union { null, string } dateTimeDiagnosis = null;

  }

  /**
  Record of phenotypes observed in an individual, which maybe independent of a
  disease diagnosis.
  Phenotype-disease links are complex and as this is a process
  performed by clinicians, presentations can be atypical and phenotypes
  unrelated to an individual diagnosis may be present.
  We also want to record phenotypes in the absences of a diagnosis.
  */
  record Phenotype {

    /**
    The phenotype, defined through an OntologyTerm.
    */
    OntologyTerm phenotype;

    /**
    Age of onset of the phenotype.
    TODO: need to define format (see Disease)
    */
    union { null, string } ageOfOnset = null;

    /**
    Date the phenotype was identified/assigned.
    Format: ISO 8601 (cf. documentation on time formats)
    */
    union { null, string } dateTimeIdentified = null;

  }

  /**
  Observations are single measurements, which can be described through their
  type, value and unit, as well as an associated dateTime value. This could be
  numerical values with a unit, or observations defined through ontologies.

  Examples would be body height, body weight, BMI...

  TODO:
    - need keyword/value table, also human notes
  */
  record Observation {

    /**
    The id of the observation. This is facultative and allows the use of
    "relationship objects" to assign e.g. evidence levels between an observation
    and e.g. a phenotype object.
    Format: UUIDv4 recommended
    */
    union { null, string } id = null;

    /**
    The type of the observation.
    */
    OntologyTerm observation;

    /**
    The value of the observation.
    */
    OntologyTerm value;

    /**
    The unit of the observation; e.g. for numeric values.
    */
    union { null, string } unit = null;

    /**
    Date the observation was made/assigned (e.g. date of diagnosis, observation
    of phenotype...). Suitable e.g. for health related purposes, epidemiology,
    experimental setups (time series)...
    Format: ISO 8601 (cf. documentation on time formats)
    */
    union { null, string } dateTimeObserved = null;

    /**
    Age at time of the observation.
    This is highly relevant in the human context and usually the primary
    available time related parameter available, as date of birth might not
    be available.
    */
    union { null, string } ageAtObservation = null;

  }

  /**
  Interventions are e.g. medical treatments.  This is a summary of the clinical
  information intended to be used in basic analysis when clinical information
  may not be avalable. This could be e.g. OntologyTerm based representations of

    medical procedure, SIO_001024
    cognitive behavior, NBO_0000607
    drug, CHEBI_23888

  */
  record Intervention {

    /**
    The id of the intervention. This is facultative and allows the association
    of an intervention to e.g. a phenotype object, through a relationship.
    */
    union { null, string } id = null;

    /**
    The type of the intervention.
    */
    union { null, OntologyTerm } intervention = null;

    /**
    A description of the intervention.
    */
    union { null, string } description = null;

    /**
    Date the the invervention started.
    Format: ISO 8601 (cf. documentation on time formats)
    */
    union { null, string } dateTimeIntervention = null;

    /**
    TODO: need keyword/value table, also human notes
    */

  }

  /**
  NOTE: Copied from genotypephenotype.avdl
  Evidence for the phenotype association.
  This is also a stub for further expansion. We should consider moving this into
  its own schema.
  TODO: Move Evidence from genotypephenotype.avdl to metadata.avdl?
  */
  record Evidence {

    /**
    ECO or OBI is recommended
    */
    OntologyTerm evidenceType;

    /**
    A textual description of the evidence. This is used to complement the
    structured description in the evidenceType field
    */
    union { null, string } description = null;

  }

  /**
  Associations allow to "glue" two objects together, in lieu of forced nesting.
  The concept borrows from the G2P definitions.
  TODO: Move Association from G2P?
  */
  record Association {

    /**
    A list of exactly two object ids.
    This is the minimum object glue; e.g. for association of the intervention
    (applied to an individual) with a sample.
    TODO: Separate attributes instead of list of 2?
    */
    array<string> ids;

    /**
    A textual description of the association.
    */
    union { null, string } description = null;

    /**
    The evidence for this specific instance of association between the
    different objects.
    */
    array<Evidence> evidence = [];

  }

  /**
  A geographic location object.
  This implementation supports a single "point" location
  and an additional/fallback description (e.g. address style) attribute.

  Using multiple GeographicLocation objects in an ordered list could allow for
  encoding of polygon-style locations (e.g. representation of administrative
  boundaries).

  The geographic point object uses the default units from the DCMI point scheme
  http://dublincore.org/documents/dcmi-point/
  and avoids optional representation in non-standard units.

  TODO:
  - Include extended attributes, capture standardized address parameters?
  */
  record GeographicLocation {

    /**
    signed decimal degrees (North, relative to Equator)
    */
    union { null, float } latitude = null;

    /**
    signed decimal degrees (East, relative to IERS Reference Meridian)
    */
    union { null, float } longitude = null;

    /**
    meters above/below (standard) sea level
    */
    union { null, float } elevation = null;

    /**
    A verbose description of the location, for processing into latitude,
    longitude, elevation attributes.
    Preferably used standard "administrative boundaries" terms.
    */
    union { null, string } description = null;

  }

  /**
  Represents a group of individuals. (e.g. a trio)
  TODO: review, this clearly define how this works.  Need an list of
  individuals.  Needs typed.
  TODO: how does matchmaker group them?
  https://github.com/MatchmakerExchange/mme-apis/blob/master/search-api.md
  */
  record IndividualGroup {

    /**
    Formats of id | name | description | accessions are described in the
    documentation on general attributes and formats.
    */
    string id;

    union { null, string } name = null;

    union { null, string } description = null;

    array<string> accessions;

    /**
    The times at which this record was created / updated.
    Format: ISO 8601 (cf. documentation on time formats)
    */
    string created;
    string updated;

    /**
    Group member ids.
    */
    array<string> memberIds;

    /**
    The type of individual group.
    */
    union { null, string } type = null;

    /**
    A map of additional information.
    */
    map<array<string>> info = {};
  }

  /**
  A Dataset is a collection of related data of multiple types.
  Data providers decide how to group data into datasets.
  See [Metadata API](../api/metadata.html) for a more detailed discussion.
  */
  record Dataset {
    /**
    The dataset's id, locally unique to the server instance.
    */
    string id;

    /**
    The name of the dataset.
    */
    union { null, string } name = null;

    /**
    Additional, human-readable information on the dataset.
    */
    union { null, string } description = null;

  }
}
