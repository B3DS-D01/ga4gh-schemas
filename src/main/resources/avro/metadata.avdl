@namespace("org.ga4gh.models")

/**
This protocol defines metadata objects and attributes for use in the other
GA4GH protocols. This includes metadata for individuals, samples, analyses
and instrumentation as well as ontology representations for metadata.
*/

<<<<<<< HEAD
/**
TODO:
  - id discussion
  - How to represent trios, twins, etc. See PGP data to drive this.
  - Explicit temporal sample relationships or samplingDate sufficient?
  - standardize name/description/notes/key-value data types
  - VERY IMPORTANT data/time of record goes to the issue of what are the
    objects and what is the data model. Is it containment or relational.
    Are we building a data model or a exchange format without knowing
    the data model.
  - should every field be prefixed by `ontology*'
*/
=======
protocol Metadata {

import idl "common.avdl";

/**
An experimental preparation of a sample.
*/
record Experiment {
  /** The experiment UUID. This is globally unique. */
  string id;

  /** The name of the experiment. */
  union { null, string } name = null;

  /** A description of the experiment. */
  union { null, string } description = null;

  /**
  The time at which this record was created.
  Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
  */
  string recordCreateTime;

  /**
  The time at which this record was last updated.
  Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
  */
  string recordUpdateTime;

  /**
  The time at which this experiment was performed.
  Granularity here is variable (e.g. date only).
  Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
  */
  union { null, string } runTime = null;

  /**
  The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
  */
  union { null, string } molecule = null;

  /**
  The experiment technique or strategy applied to the sample.
  (e.g. whole genome sequencing, RNA-seq, RIP-seq)
  */
  union { null, string } strategy = null;

  /**
  The method used to enrich the target. (e.g. immunoprecipitation, size
  fractionation, RNase digestion)
  */
  union { null, string } selection = null;

  /** The name of the library used as part of this experiment. */
  union { null, string } library = null;

  /** The configuration of sequenced reads. (e.g. Single or Paired) */
  union { null, string } libraryLayout = null;
>>>>>>> master

protocol Metadata {

  import idl "common.avdl";

  /**
  An ontology term describing an attribute. (e.g. the phenotype attribute
  'polydactyly' from HPO)
  */
  record OntologyTerm {
    /**
    ontology source name - the name of ontology from which the term is obtained
    e.g. 'Human Phenotype Ontology'
    */
    union { null, string } ontologySourceName = null;

    /**
    ontology source identifier - the identifier, a CURIE (preferred) or
    PURL for an ontology source e.g. http://purl.obolibrary.org/obo/hp.obo
    */
    union { null, string } ontologySourceID = null;

    /**
    ontology source version - the version of the ontology from which the
    OntologyTerm is obtained; e.g. 2.6.1.
    There is no standard for ontology versioning and some frequently
    released ontologies may use a datestamp, or build number.
    */
    union { null, string } ontologySourceVersion = null;
  }

 /**
  Representation of a disease. The object should in minimal version report the
  kind of the disease and a temporal parameter.

  The "Disease" object is not intended to represent extended clinical records,
  but as a basic representation of the most relevant attributes in the context
  of the study at hand.

  GA4GH metadata does not attempt to encode detailed phenotypes of the disease
  or longitudinal concepts. Association of diseases and disease phenotypes
  (e.g Li-Fraumeni syndrome and resulting malignancies) is complex and left to
  external processes utilizing GA4GH type records in combination with medical
  information systems.
  TODO:
    - need to link to clinical data. Reference to clinical working group
    - need keyword/value table, also human notes
  */
  record Disease {

    /**
    The diagnosis, defined through an OntologyTerm.
    */
    OntologyTerm disease;

    /**
    The stage of the disease at diagnosis. This is not updated to reflect
    progression of the disease, which is recorded in the clinical data.
    e.g. OntologyTerm representation for stage T2N1M0.
    */
    union { null, OntologyTerm } stageAtDiagnosis = null;

    /**
    Age of onset of the disease.
    Format: ISO 8601 duration PnYnMnDTnHnMnS in a suitable approximation
    Example: P47Y08M (47 years, 8 months)
    TODO:
      - this may need to be redefined e.g. as OntologyTerm, since there are
        non-numerical ways to record/classify age (age range, developmental
        stage, date or partial date)
    */
    union { null, string } ageOfOnset = null;

    /**
    Date the diagnosis was made/assigned. This is NOT when the record was
    created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeDiagnosis = null;

  }

  /**
  Record of phenotypes observed in an individual, which maybe independent of a
  disease diagnosis.
  Phenotype-disease links are complex and as this is a process
  performed by clinicians, presentations can be atypical and phenotypes
  unrelated to an individual diagnosis may be present.
  We also want to record phenotypes in the absences of a diagnosis.
  TODO:
    - need to link to clinical data. Reference to clinical working group
    - need keyword/value table, also human notes
  */
  record Phenotype {

    /**
    The phenotype, defined through an OntologyTerm.
    */
    OntologyTerm phenotype;

    /**
    Age of onset of the phenotype.
    TODO: need to define format (see Disease)
    */
    union { null, string } ageOfOnset = null;

    /**
    Date the phenotype was identified/assigned.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeIdentified = null;

  }

  /**
  Observations are single measurements, which can be described through their
  type, value and unit, as well as an associated dateTime value. This could be
  numerical values with a unit, or observations defined through ontologies.

  Examples would be body height, body weight, BMI...

  TODO:
    - need keyword/value table, also human notes
  */
  record Observation {

    /**
    The id of the observation. This is facultative and allows the use of
    "relationship objects" to assign e.g. evidence levels between an observation
    and e.g. a phenotype object.
    Format: UUIDv4 recommended
    */
    union { null, string } id = null;

    /**
    The type of the observation.
    */
    OntologyTerm observation;

    /**
    The value of the observation.
    */
    OntologyTerm value;

    /**
    The unit of the observation; e.g. for numeric values.
    */
    union { null, string } unit = null;

    /**
    Date the observation was made/assigned (e.g. date of diagnosis, observation
    of phenotype...). Suitable e.g. for health related purposes, epidemiology,
    experimental setups (time series)...
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeObserved = null;

    /**
    Age at time of the observation.
    This is highly relevant in the human context and usually the primary
    available time related parameter available, as date of birth might not
    be available.
    */
    union { null, string } ageAtObservation = null;

  }

  /**
  Interventions are e.g. medical treatments.  This is a summary of the clinical
  information intended to be used in basic analysis when clinical information
  may not be avalable. This could be e.g. OntologyTerm based representations of

    medical procedure, SIO_001024
    cognitive behavior, NBO_0000607
    drug, CHEBI_23888

  */
<<<<<<< HEAD
  record Intervention {

    /**
    The id of the intervention. This is facultative and allows the association
    of an intervention to e.g. a phenotype object, through a relationship.
    */
    union { null, string } id = null;

    /**
    The type of the intervention.
    */
    union { null, OntologyTerm } intervention = null;

    /**
    A description of the intervention.
    */
    union { null, string } description = null;

    /**
    Date the the invervention started.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42Z)
    */
    union { null, string } dateTimeIntervention = null;

    /**
    TODO: need keyword/value table, also human notes
    */

  }

  /**
  NOTE: Copied from genotypephenotype.avdl
  Evidence for the phenotype association.
  This is also a stub for further expansion. We should consider moving this into
  its own schema.
  TODO: Move Evidence from genotypephenotype.avdl to metadata.avdl?
  */
  record Evidence {

    /**
    ECO or OBI is recommended
    */
    OntologyTerm evidenceType;

    /**
    A textual description of the evidence. This is used to complement the
    structured description in the evidenceType field
    */
    union { null, string } description = null;

  }

  /**
  Associations allow to "glue" two objects together, in lieu of forced nesting.
  The concept borrows from the G2P definitions.
  TODO: Move Evidence from genotypephenotype.avdl?
  */
  record Association {

    /**
    A list of exactly two object ids.
    This is the minimum object glue; e.g. for association of the intervention
    (applied to an individual) with a sample.
    */
    array<string> ids;

    /**
    A textual description of the association.
    */
    union { null, string } description = null;

    /**
    The evidence for this specific instance of association between the
    different objects.
    */
    array<Evidence> evidence = [];

  }

  /**
  A geographic location object.
  This implementation supports a single "point" location
  and an additional/fallback description (e.g. address style) attribute.

  Using multiple GeographicLocation objects in an ordered list could allow for
  encoding of polygon-style locations (e.g. representation of administrative
  boundaries).

  The geographic point object uses the default units from the DCMI point scheme
  http://dublincore.org/documents/dcmi-point/
  and avoids optional representation in non-standard units.

  TODO:
  - Include extended attributes, capture standardized address parameters
  */
  record GeographicLocation {

    /**
    signed decimal degrees (North, relative to Equator)
    */
    union { null, float } latitude = null;

    /**
    signed decimal degrees (East, relative to IERS Reference Meridian)
    */
    union { null, float } longitude = null;

    /**
    meters above/below (standard) sea level
    */
    union { null, float } elevation = null;

    /**
    A verbose description of the location, for processing into latitude,
    longitude, elevation attributes.
    Preferably used standard "administrative boundaries" terms.
    */
    union { null, string } description = null;

  }

  /**
  An individual (or subject) typically corresponds to an individual
  human or other organism.

  TODO: need query to get known downstream IDs, e.g. UUIDs of samples.
  TODO: needed query to get Known aggregation IDs, e.g. UUIDs of datasets or
  analyses using pooled material or families (e.g. trios).
  */
  record Individual {

    /**
    The individual's id. This is the local/legacy/generic id.
    */
    string id;

    /**
    The individual's guid. This is globally unique id (UUIDv4).
    TODO: Required?!
    */
    union { null, string } guid = null;

    /**
    The name of the individual.
    */
    union { null, string } name = null;

    /**
    Additional, human-readable information on the individual.
    */
    union { null, string } description = null;

    /**
    External identifiers for individual, e.g. 1000 Genomes identifier.
    */
    array<string> externalIds;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    TODO: The format definition is temporary and will be updated to
    the upcoming AVRO time format (timestamp-millis) when this is supported.
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The species of this individual. Acceptable to classify as a higher-level
    taxon when needed e.g. for environmental samples.
    Using NCBI taxonomy
      http://www.ncbi.nlm.nih.gov/taxonomy
    is recommended.
    For a representation of an NCBI Taxon ID as an OntologyTerm, see
    NCBITaxon Ontology
      http://www.obofoundry.org/wiki/index.php/NCBITaxon:Main_Page
    For example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for
    this is NCBITaxon:9606, which has the URI
    http://purl.obolibrary.org/obo/NCBITaxon_9606
    */
    OntologyTerm species;

    /**
    The strain of this individual, for non-humans.
    */
    union { null, OntologyTerm } strain = null;

    /** Ethnicity of individual, if applicable.
    Recommended by the NHGRI GWAS Catalog 0 ontology
    http://purl.bioontology.org/ontology/ANCESTRO
    */
    union { null, OntologyTerm } ethnicity = null;

    /**
    Geographic coordinates from which the individual was obtained.
    */
    union { null, GeographicLocation } geographicLocation = null;

    /**
    The genetic sex of this individual.
    Use `null` when unknown or not applicable.
    */
    union { null, OntologyTerm } sex = null;

    /**
    The developmental stage of this individual. This not age of onset of a
    disease.
    Using Uberon is recommended.
    For example http://purl.obolibrary.org/obo/UBERON_0007023 => adult organism
    TODO: need to clarify how to deal with this as a temporal series
    */
    union { null, OntologyTerm } developmentalStage = null;

    /**
    The date of birth of this individual, which maybe partial. Usually would be
    coded to the day; however, finer (e.g. animal model system) or more
    approximate (e.g. year for clinical applications) granularity is possible.
    Format: ISO 8601, YYYY-MM-DD
    Examples:
      1967
        in the year 1967
      1999-05-08T17:15+02
        quarter past five on May 8, 1999, in Western Europe daylight saving time
    */
    union { null, string } dateOfBirth = null;

    /**
    Diseases with which the individual has been diagnosed.
    */
    array<Disease> diseases = [];

    /**
    Phenotypes for this individual.
    */
    array<Phenotype> phenotypes = [];

    /**
    A description of the clinical treatments/interventions.
    */
    array<Intervention> interventions = [];

    /**
    Observations and measurements related to the individual.
    */
    array<Observation> observations = [];

    /**
    A map of additional individual information.
    TODO: standardize this.
    */
    map<array<string>> info = {};

  }

  /**
  A biological sample from which the preparation of the
  target molecule type of interest (e.g. DNA, protein preparation,
  RNA ...) is being extracted.
  Examples would be:
    - a microdissected collection of one or multiple malignant
    cells from a pancreas carcinoma biopsy
    - an environmental sample (e.g. water collected in the
    Atlantic ocean, at Latitude 26.4, Longitude 69.3, Altitude -100m)
    - whole blood preparation of an individual
  */
  record BioSample {

    /**
    The biosample's id.
    */
    string id;

    /**
    The biosample's guid.
    */
    union { null, string } guid = null;

    /**
    The name of the biosample.
    */
    union { null, string } name = null;

    /**
    Additional, human-readable information on the biosample.
    */
    union { null, string } description = null;

    /**
    External identifiers for sample, e.g. EBI BioSamples accession.
    */
    array<string> externalIds;

    /**
    The ids of the individuals this biosample was derived from.  Multiple ids are
    allowed, as a biosample maybe pooled from multiple individuals.
    */
    array<string> individualIds;

    /**
    A description of the biosample.
    */
    union { null, string } description = null;

    /**
    The species of this biosample.
    Using NCBI taxonomy (http://www.ncbi.nlm.nih.gov/taxonomy) is recommended.
    Biosample may not reference human individuals only, so species is
    annotated here, too.
    For host-pathogen interactions, "species" may differ from the individual
    from which the biosample was derived.
    */
    union { null, OntologyTerm } species = null;

    /**
    The genetic sex of this biosample. Use `null` when unknown or not applicable.
    */
    union { null, OntologyTerm } sex = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The time at which this biosample was taken from the individual.
    Granularity here is variable (e.g. only date would be common for
    biopsies, minutes for in vitro time series).
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
    */
    union { null, string } samplingDate = null;

    /**
    The age of the individual (not of the biosample) at time of
    biosample's collection.
    This parameter is both more prevalent in clinical records than the
    combination of sampling date and DOB, and also more relevant for
    clinical/experimental purposes than either of those alone.
    This field may be approximate.
    Format: ISO 8601 duration PnYnMnDTnHnMnS in a suitable approximation
    Example: P12Y3M
    */
    union { null, string } ageAtSampling = null;

    /**
    A description of the interventions applied to the biosample
    (e.g. in vitro drug testing).
    */
    array<Intervention> interventions = [];

    /**
    Observations and measurements related to the biosample.
    */
    array<Observation> observations = [];

    /**
    The cell types of this biosample.
    Using the [Cell Ontology](http://cellontology.org/) (CL) is recommended.
    */
    array<OntologyTerm> cellType;

    /**
    The anatomical part (body part, organ, tissue, body or excretory fluid) of
    the individual from which this biosample derives.
    Using Uberon (http://uberon.org) is recommended.
    */
    union { null, OntologyTerm } organismPart = null;

    /**
    This biosample could be derived from a cell line, which still
    could be from an indivdual.
    Using the Cell Line Ontology (https://code.google.com/p/clo-ontology/)
    is a possibility.
    TODO: discuss further. Other possibilities: Cellosaurus (nextprot),
    BRENDA/BTO, EFO (EBI)
    TODO: need to have derivation record from other biosample for
    cell lines.
    */
    union { null, OntologyTerm } cellLine = null;

    /**
    Geographic coordinates from which the biosample was obtained.
    This is either related to a field collection, or the corresponding
    individual's place of residencde or treatment.
    TODO: May need replacement with multiple locations.
    */
    union { null, GeographicLocation } geographicLocation = null;

    /**
    A typing of the specimen under study. Use the OBI terms under child of
    specimen. e.g. "cloacal swab".
    */
    union { null, OntologyTerm } specimenType = null;

    /**
    Preservation method of sample.
    http://bioportal.bioontology.org/ontologies/OBI/ - use children of specimen
    with known storage state e.g. "frozen specimen"
    */
    union { null, OntologyTerm } preservationMethod = null;

    /**
    A map of additional biosample information.
    TODO: make consistent
    */
    map<array<string>> info = {};
  }

  /**
  A technical procedure performed on (pre-processed, labeled ...) material
  (DNA, RNA, protein extraction) derived from a single or a mix of BioSamples.
  FIXIT:
  - Would Assay be a better name?
  */
  record Experiment {
    /** The experiment id. This is at least locally unique. */
    string id;

    /** The name of the experiment. */
    union { null, string } name = null;

    /** A description of the experiment. */
    union { null, string } description = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The time at which this experiment was performed.
    Granularity here is variabel (e.g. date only).
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
    */
    union { null, string } runTime = null;

    /**
    The molecule examined in this experiment. (e.g. genomic DNA, total RNA)
    */
    union { null, string } molecule = null;

    /**
    The general experiment technique or strategy applied to the sample.
    (e.g. whole genome sequencing, RNA-seq, RIP-seq, SNP array)
    */
    union { null, string } strategy = null;

    /**
    A descriptive name of the technology platform.
    Example: Illumina HiSeq
    */
    union { null, string } platformName = null;

    /**
    A platform identifier which corresponds to a locally controlled vocabulary.
    Example: "GPL6801" in the context of GEO
    */
    union { null, string } platformId = null;

    /**
    The method used to enrich the target. (e.g. immunoprecipitation, size
    fractionation, MNase digestion)
    */
    union { null, string } selection = null;

    /**
    The ID of the library or other labeled preparation used in this experiment.
    */
    union { null, string } preparationId = null;

    /**
    The instrument model used for this experiment.
    FIXIT: Does this map to sequencing technology in BAM?
    */
    union { null, string } instrumentModel;

    /**
    The data file generated by the instrument.
    FIXIT: Should probably be a pointer to an object ID; storage as file should
    not be coded in.
    */
    union { null, string } instrumentDataFile = null;

    /**
    The facility where this experiment was performed.
    FIXIT: Systematic way to identify facilities?
    */
    union { null, string } processingFacility;

    /**
    A map of additional experiment information.
    */
    map<array<string>> info = {};
  }

  /**
  Represents a group of contextually related data objects of (e.g. all
  Individuals, Samples, Experiments associated with a particular feature; or
  e.g. a trio in genetic diagnostics.).  This concept may be expanded in the
  future (ontology for describing the type of dataset ...).
  TODO: Determination of scope, structure, specific attributes, e.g. limiting to
  single record type - see http://purl.obolibrary.org/obo/IAO_0000100 - and
  providing alternative mechanism for heterogeneous data with external
  contextualization, e.g. all records of different types associated with a
  clinical study.

  TODO: this might be a good way to think about the role of dataset:
    http://isatab.sourceforge.net/format.html investigation, study, assay

  TODO: maybe this is dataset: BioProject is a collection of biological data
    related to a single initiative, originating from a single organization or
    from a consortium. A BioProject record provides users a single place to find
    links to the diverse data types generated for that project.
    http://www.ncbi.nlm.nih.gov/bioproject/
    is this is this a good analogy?
  */
  record Dataset {

    /**
    The dataset's id. This is the local/legacy/generic id.
    */
    string id;

    /**
    The dataset's guid. This is globally unique id (UUIDv4).
    TODO: Required?!
    */
    union { null, string } guid = null;

    /**
    The name of the dataset.
    */
    union { null, string } name = null;

    /**
    Dataset member ids.
    TODO: Definition of id types (guid?!) ...
    */
    array<string> memberIds;

    /**
    A textual descriptio;

    /**
    A description of the dataset.
    */
    union { null, string } description = null;

  }

  /**
  Represents a group of individuals. (e.g. a trio)
  TODO: review, this clearly define how this works.  Need an list of
  individuals.  Needs typed.
  TODO: how does matchmaker group them?
  https://github.com/MatchmakerExchange/mme-apis/blob/master/search-api.md
  */
  record IndividualGroup {

    /**
    The group's id. This is the local/legacy/generic id.
    */
    string id;

    /**
    The groups's guid. This is globally unique id (UUIDv4).
    TODO: Required?!
    */
    union { null, string } guid = null;

    /**
    Group member ids.
    TODO: Definition of id types (guid?!) ...
    */
    array<string> memberIds;

    /**
    The name of the individual group.
    */
    union { null, string } name = null;

    /**
    A description of the individual group.
    */
    union { null, string } description = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The type of individual group.
    */
    union { null, string } type = null;

    /**
    A map of additional individual group information.
    */
    map<array<string>> info = {};

  }

  /**
  An analysis contains an interpretation of one or several experiments.
  (e.g. SNVs, copy number variations, methylation status) together with
  information about the methodology used.
  TODO: review
  */
  record Analysis {

    /**
    The analysis' id. This is the local/legacy/generic id.
    */
    string id;

    /**
    The analysis' guid. This is globally unique id (UUIDv4).
    TODO: Required?!
    */
    union { null, string } guid = null;

    /** The name of the analysis. */
    union { null, string } name = null;

    /** A description of the analysis. */
    union { null, string } description = null;

    /**
    The time at which this record was created.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordCreateTime;

    /**
    The time at which this record was last updated.
    Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
    */
    string recordUpdateTime;

    /**
    The type of analysis.
    */
    union { null, string } type = null;

    /**
    The software run to generate this analysis.
    */
    array<string> software = [];

    /**
    A map of additional analysis information.
    */
    map<array<string>> info = {};
  }
=======
  map<array<string>> info = {};
}

/**
A Dataset is a collection of related data of multiple types.
Data providers decide how to group data into datasets.
See [Metadata API](../api/metadata.html) for a more detailed discussion.
*/
record Dataset {
  /**
  The dataset's id, locally unique to the server instance.
  */
  string id;

  /**
  The name of the dataset.
  */
  union { null, string } name = null;

  /**
  Additional, human-readable information on the dataset.
  */
  union { null, string } description = null;

}
>>>>>>> master

}
