@namespace("org.ga4gh")
protocol GA4GH {

record GAReferenceSequence {
  union { null, string } assemblyId = null;
  union { null, long } length = null;
  union { null, string } md5checksum = null;
  union { null, string } name = null;
  union { null, string } species = null;
  union { null, string } uri = null;
}

record GAProgram {
  union { null, string } commandLine = null;
  union { null, string } id = null;
  union { null, string } name = null;
  union { null, string } prevProgramId = null;
  union { null, string } version = null;
}

record GAReadGroup {

  // The readgroup ID.
  string id;

  // The ID of the dataset this readgroup belongs to.
  union {null, string} datasetId = null;

  // The readgroup name.
  union {null, string} name = null;

  // The readgroup description.
  union {null, string} description = null;
  
  // The sample this readgroup's data was generated from.
  union { null, string } sample;
  
  union { null, string } flowOrder = null;
  union { null, string } keySequence = null;
  union { null, string } library = null;
  union { null, string } platformUnit = null;
  union { null, int } predictedInsertSize = null;
  union { null, string } processingProgram;
  union { null, string } sequencingCenter;
  union { null, string } sequencingTechnology;

  // The date this readgroup was created.
  union {null, long} created = null;

  // The number of reads in this readgroup.
  union {null, long} readCount = null;
  
  // The programs used to generate this readgroup.
  union { null, array<GAProgram> } programs = null;

  // The reference sequences the reads in this readgroup are aligned to.
  union { null, array<GAReferenceSequence> } referenceSequences = null;
  
  // Additional information
  union { null, array<GAKeyValue> } tags = null;
}

record GAKeyValue { 
    string key;
    string value = null;
}

record GARead {
    // The read ID
    union { null, string } id = null;
  
    // The name of the read. When imported from a BAM file, this is the query
    // template name. (QNAME)
    union { null, string } name = null;

    // The ID of the readgroup this read belongs to. (Every read must belong to exactly one readgroup.)
    string readgroupId;

    // Read flags (all default to false)
    union { boolean, null } readPaired = false;   // The paired read must belong to the same readgroup.
    union { boolean, null } properPair = false;
    union { boolean, null } readMapped = false;
    union { boolean, null } mateMapped = false;
    union { boolean, null } readNegativeStrand = false;
    union { boolean, null } mateNegativeStrand = false;
    union { boolean, null } firstOfPair = false;
    union { boolean, null } secondOfPair = false;
    union { boolean, null } primaryAlignment = false;
    union { boolean, null } failedVendorQualityChecks = false;
    union { boolean, null } duplicateRead = false;

    // 0-based reference positions
    union { null, long } position = null;
    union { null, long } matePosition = null;

    // A score up to 255 that represents how likely this read's aligned position
    // is correct. A higher value is better. (MAPQ)
    union { null, int } mappingQuality = null;

    // Length of the original piece of dna that produced both this read and the
    // paired read. (TLEN)
    union { null, int } templateLength = null; 

    // The list of bases that this read represents (e.g. 'CATCGA'). (SEQ)
    union { null, string } originalBases = null;

    // The originalBases after the cigar field has been applied. Deletions are
    // represented with '-' and insertions are omitted.
    union { null, string } alignedBases = null;

    // The compact idiosyncratic gapped alignment report (CIGAR)
    union { null, string } cigar = null;
    
    // Represents the quality of each base in this read. Each character represents
    // one base. To get the quality, take the ASCII value of the character and
    // subtract 33. (QUAL)
    union { null, string } baseQuality = null;

    union { null, array<GAKeyValue> } tags = null;
}

}
