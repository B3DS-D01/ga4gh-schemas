@namespace("org.ga4gh.models")

/**
This protocol defines types used by the GA4GH Allele Annotation API.

Annotation can be applied to the alternate alleles of classic variants
or to Alleles
*/


protocol AlleleAnnotations{

import idl "common.avdl";
import idl "metadata.avdl";
import idl "sequenceAnnotations.avdl";
import idl "variants.avdl";
import idl "ontologies.avdl";


/*
This protocol currently attempts to support linear variants and graph alleles by providing
two grouping records (VariantAnnotation and AlleleAnnotation) which have a similar structure
of attributes and sub-records.

The TranscriptEffect sub record holds information on the effect of a specific allele on a
specific transcript.
As Variants may overlap multiple transcripts, they may have multiple TranscriptEffect records.
Variants with multiple alternate alleles will have multiple TranscriptEffect records per
transcript. (2 alternate alleles x 3 transcripts = 6 TranscriptEffect records)
As graph Alleles may overlap multiple transcripts, they may have multiple TranscriptEffect records.

VariantAnnotation and AlleleAnnotation records belong to AnnotationSets. AnnotationSets contain
information on reference data and software versions used in calculating the annotation. It is
essential this information is exhaustive.

*/

/**
An AnalysisResult record holds the output of a prediction package such as SIFT on a
specific allele/transcript combination
*/
record AnalysisResult {

  /** The analysis record for this result (defined in metadata schema)  */
  Analysis analysis;

  /** The text-based result for this analysis */
  union { null, string} analysisResult;

  /** The numeric score for this analysis  */
  union { null, int} analysisScore;

}


/**
An allele location record holds the location of an allele relative to a
non-genomic coordinate system such as a CDS or protein and holds the
reference and alternate sequence where appropriate
*/
record AlleleLocation {

  /** Relative start position of the allele in this coordinate system */
  int overlapStart ;

  /** Relative end position of the allele in this coordinate system  */
  int overlapEnd ;

  /** Reference sequence in feature (this should be the codon at CDS level) */
  union { null, string } referenceSequence = null;

  /** Alternate sequence in feature (this should be the codon at CDS level) */
  union { null, string } alternateSequence = null;

}

/**
Impact is a simple prioritization for the effect of an allele which is used
in the annotation record.
IMPORTANT:
 Prioritization methods are a crude estimates and are not assumed to be
 reliable: a 'HIGH' Impact may actually not cause any disruption
 in protein function or expression.
*/
enum Impact {
 HIGH,      // Variant highly disrupts protein function
 MODERATE,  // Moderately disrupts protein function
 LOW,       // Low disruption of protein impact
 MODIFIER   // No known effect
}

/**
An annotation set record groups VariantAnnotation and/or AlleleAnnotation records. It holds
information describing the software and reference data used in the annotation.
*/
record AnnotationSet {

  /** The ID of the annotation set record */
  string id;

  /** The ID of the dataset to which this annotation set belongs */
  string datasetId;

  /**
  Analysis details. It is essential to supply versions for all software and
  reference datasets used.
  */
  Analysis analysis;

}


/**
A transcript effect record is a set of information describing the
effect of an allele on a transcript
*/
record TranscriptEffect {


  /** The ID of the transcript effect record
  */
  string id;

  //TODO: derive unique id from digest of data [location, allele, transcript?]


  /** The id of the transcript feature the annotation is relative to
  */
  string featureId;


  /** Alternate allele - a variant may have more than one alternate allele, each of which
  will have distinct annotation. This is not be needed for the graph Allele model
  */
  union { null, string} alternateBases = null;

  /** Effect of variant on this feature */
  array<OntologyTerm> effects;


  /** Highest Impact from the predicted effects */
  Impact impact;


  /** HGVS formatted annotation at genomic level  */
  union { null, string } HGVSg = null;

  /** HGVS formatted annotation at transcript level */
  union { null, string } HGVSc = null;

  /** HGVS formatted annotation at protein level */
  union { null, string } HGVSp = null;


  /** Change relative to cDNA  */
  union {null, AlleleLocation} cDNALocation =null;

  /* Change relative to coding sequence  */
  union { null, AlleleLocation} CDSLocation = null;

  /** Change relative to protein  */
  union { null, AlleleLocation} proteinLocation = null;


  /** Output from prediction packages such as Sift */
  array<AnalysisResult> analysisResults;


}




/**
A `VariantAnnotation` record represents the result of comparing a variant
to a set of reference data.
*/
record VariantAnnotation {

  /** The variant ID. */
  string id;

  /** The ID of the annotation set this record belongs to. */
  string annotationSetId;


  /** The date this annotation was created in milliseconds from the epoch. */
  union { null, long } created = null;


  /**
  The transcript effect annotation for the alleles of this variant. Each one
  represents the effect of a single allele on a single transcript.
  */
  array<TranscriptEffect> transcriptEffects = [];


  /**
  The names of known variants which are co-located with this variant.
  these can use used to look up disease associations, ClinVar statuses,
  allele frequencies in reference panels, etc
  */
  array<string> coLocatedVariants =[];


  /** Additional annotation data in key-value pairs. */
  map<array<string>> info = {};

}

/**
An `AlleleAnnotation` record represents the result of comparing a allele
to a set of reference data.
*/
record AlleleAnnotation {

  /** The allele ID. */
  string id;

  /** The ID of the annotation set this record belongs to. */
  string annotationSetId;

  /** The date this allele annotation was created in milliseconds from the epoch. */
  union { null, long } created = null;


  /**
  The transcript effect annotation for this allele. Each one represents
  the predicted effect of the allele on a single transcript.
  */
  array<TranscriptEffect> transcriptEffects = [];

  /**
  The names of known variants which are co-located with this allele.
  these can use used to look up disease associations, ClinVar statuses
  allele frequencies in reference panels, etc
  */
  array<string> coLocatedVariants =[];


  /** Additional annotation data in key-value pairs. */
  map<array<string>> info = {};

}


}


